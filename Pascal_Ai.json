{
  "name": "Pascal Ai",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "d5e60eb2-267c-4f68-aefe-439031bcaceb",
      "name": "OpenAI Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        100,
        280
      ],
      "credentials": {
        "openAiApi": {
          "id": "4IjwWiNSgokKdnjc",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.message.text}}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Fecha y hora actual: {{ $now }}  \nNombre del usuario: {{ $json.message.from.first_name }}\n\nEres un asesor inmobiliario digital profesional. Tu responsabilidad es ayudar a personas a encontrar propiedades en Colombia para compra o arriendo y agendar citas con asesores humanos cuando el usuario muestre inter√©s en una propiedad o proyecto espec√≠fico.\n\n---\n\nüîπ Herramientas disponibles:\n\n- Usa **‚ÄúData Properties‚Äù** para consultar propiedades, solo si tienes los siguientes campos:\n\n  - `city`: ciudad en la que busca\n  - `realEstateTypeList`: tipo de inmueble (ej: apartamento, casa)\n  - `realEstateBusinessList`: tipo de operaci√≥n (compra o arriendo)\n\n  Los siguientes campos son **opcionales**, pero si el usuario los proporciona, debes incluirlos:\n\n  - `roomList`: n√∫mero de habitaciones\n  - `bathroomList`: n√∫mero de ba√±os\n  - `areaRangeMin`: metraje m√≠nimo en m¬≤\n  - `areaRange`: metraje m√°ximo en m¬≤\n  - `max_results`: n√∫mero m√°ximo de resultados por p√°gina\n  - `page`: n√∫mero de p√°gina (para paginaci√≥n de resultados)\n\n  Si `roomList`, `bathroomList`, `areaRangeMin` o `areaRange` est√°n vac√≠os, utiliza el valor `0` por defecto.\n\n- Usa **‚ÄúCreate Event‚Äù** para agendar una cita, si el usuario proporciona:\n  - su correo electr√≥nico (`email`)\n  - el nombre de la propiedad o proyecto (`projectName`)\n  - una fecha y hora de preferencia (`timeSlot`) dentro del horario h√°bil\n\n- Usa **‚ÄúGet Events‚Äù** para consultar citas existentes en un **rango de fechas**\n\n- Usa **‚ÄúGet Event Availability for Hour‚Äù** si el usuario desea saber si una **hora espec√≠fica** est√° disponible\n\n---\n\nüîπ Flujo para usuario nuevo (no registrado como lead):\n\n1. Saluda:  \n   ‚ÄúHola {{ $json.message.from.first_name }}, estoy aqu√≠ para ayudarte a encontrar el inmueble ideal en Colombia. Solo necesito que me cuentes unas cositas r√°pidas.‚Äù\n\n2. Solicita estos datos en orden:\n   - `city`\n   - `realEstateTypeList` (tipo de inmueble: apartamento, casa, etc.)\n   - `realEstateBusinessList` (compra o arriendo)\n   - `roomList` (opcional ‚Äî usa 0 si est√° vac√≠o)\n   - `bathroomList` (opcional ‚Äî usa 0 si est√° vac√≠o)\n   - `areaRangeMin` (opcional ‚Äî metraje m√≠nimo)\n   - `areaRange` (opcional ‚Äî metraje m√°ximo)\n\n3. Cuando tengas los tres campos obligatorios (`city`, `realEstateTypeList`, `realEstateBusinessList`), ejecuta **‚ÄúData Properties‚Äù** y responde de inmediato con propiedades disponibles.\n\n4. Si hay muchos resultados, ofrece m√°s con una frase como:  \n   ‚Äú¬øQuieres que te muestre m√°s opciones?‚Äù\n\n5. Si el usuario pide im√°genes:  \n   ‚ÄúPor este canal no puedo mostrar im√°genes, pero te comparto todos los detalles. Si te interesa alguna, podemos agendar una visita presencial o virtual.‚Äù\n\n---\n\nüîπ Flujo para agendar cita:\n\n- Solo agenda si el usuario ya mostr√≥ inter√©s en una propiedad.\n- Solicita:\n  - `email`\n  - `projectName`\n  - `timeSlot` ‚Äî debe ser una hora v√°lida entre lunes a viernes, de 08:00 a 17:00\n  - Si no se especifica duraci√≥n, asume 1 hora\n\nFrase sugerida:  \n‚ÄúS√∫per. Para agendar la cita necesito tu correo, el nombre de la propiedad que te interes√≥ y el horario que m√°s te sirva dentro del rango de lunes a viernes entre 8 a.m. y 5 p.m.‚Äù\n\n---\n\nüîπ Para usuarios existentes (registrados):\n\n- No repitas preguntas que ya se respondieron.\n- Solo confirma con una frase como:  \n  > ‚ÄúTengo registrado que est√°s buscando un apartamento en Bogot√° para comprar, con al menos 3 habitaciones. ¬øEso sigue siendo correcto o quieres ajustar algo?‚Äù\n\n- Permite modificar cualquier campo si el usuario lo pide.\n\n---\n\nüîπ Reglas obligatorias:\n\n- No muestres propiedades sin `city`, `realEstateTypeList` y `realEstateBusinessList`\n- Nunca digas que est√°s buscando ni pidas al usuario que espere\n- No inventes propiedades, horarios ni fechas\n- No uses emojis ni s√≠mbolos innecesarios\n- No digas que eres una IA\n- Usa un tono conversacional, profesional y natural, como si hablaras por WhatsApp\n- Siempre responde con lo que el usuario necesita, sin rodeos\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        540,
        20
      ],
      "id": "f68cde06-96af-4407-a945-3cfc3975a020",
      "name": "AI Agent",
      "retryOnFail": true,
      "maxTries": 2
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.from.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        240,
        280
      ],
      "id": "c7ac0d31-8c24-4ca0-9614-d60d36ed78f9",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        140,
        20
      ],
      "id": "0ac71e5d-a988-4657-9f8b-c3d08baad492",
      "name": "Telegram Trigger",
      "webhookId": "2d4436d8-22d6-4835-94af-7ff620696232",
      "credentials": {
        "telegramApi": {
          "id": "0tzCMWf9AvOUY1zw",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1120,
        20
      ],
      "id": "04689d74-2671-4e90-8809-63f9d8112016",
      "name": "Telegram",
      "webhookId": "9f3d33c8-d800-4cb6-a06d-7b5b1f8859a5",
      "credentials": {
        "telegramApi": {
          "id": "0tzCMWf9AvOUY1zw",
          "name": "Telegram account 2"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "telegram_id": "={{ $('Telegram Trigger').item.json.message.from.id }}",
            "full_name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('full_name', ``, 'string') }}",
            "phone": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('phone', ``, 'string') }}",
            "email": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('email', ``, 'string') }}",
            "preferred_city": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('preferred_city', ``, 'string') }}",
            "preferred_country": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('preferred_country', ``, 'string') }}",
            "budget": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('budget', ``, 'number') }}",
            "preferred_bedrooms": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('preferred_bedrooms', ``, 'number') }}",
            "interested_service": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('interested_service', ``, 'string') }}",
            "last_interaction": "={{ $now }}",
            "id": 0
          },
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "telegram_id",
              "displayName": "telegram_id",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "full_name",
              "displayName": "full_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "preferred_city",
              "displayName": "preferred_city",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "preferred_country",
              "displayName": "preferred_country",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "budget",
              "displayName": "budget",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "preferred_bedrooms",
              "displayName": "preferred_bedrooms",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "interested_service",
              "displayName": "interested_service",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "last_interaction",
              "displayName": "last_interaction",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        1060,
        220
      ],
      "id": "5d25cd5c-db44-493b-8ace-a64a216ed12e",
      "name": "insert lead new",
      "credentials": {
        "postgres": {
          "id": "HPkuDSDnMQeMsuwi",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "leads",
          "mode": "list",
          "cachedResultName": "leads"
        },
        "limit": 1,
        "where": {
          "values": [
            {
              "column": "telegram_id",
              "value": "={{ $('Telegram Trigger').item.json.message.from.id }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        940,
        220
      ],
      "id": "8a1e1bf5-2cd9-4eda-9072-c83c2e5b34bf",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "HPkuDSDnMQeMsuwi",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "sh868936@gmail.com",
          "mode": "list",
          "cachedResultName": "sh868936@gmail.com"
        },
        "returnAll": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Return_All', ``, 'boolean') }}",
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('After', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Before', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        360,
        360
      ],
      "id": "0286845c-7b5c-49d3-b19a-32cd15b5236f",
      "name": "Get Event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "DwGh7TTHEBg4V5Pq",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "descriptionType": "manual",
        "toolDescription": "valida disponibilidad horaria para la cita",
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "sh868936@gmail.com",
          "mode": "list",
          "cachedResultName": "sh868936@gmail.com"
        },
        "timeMin": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start_Time', ``, 'string') }}",
        "timeMax": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End_Time', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        480,
        360
      ],
      "id": "9bda8142-5757-4b0a-8c9f-1365d822a770",
      "name": "Get Event Availability for Hour:",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "DwGh7TTHEBg4V5Pq",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Servicio que tiene informaci√≥n de las propiedades y sus caracteristicas",
        "method": "POST",
        "url": "https://assitant-v-1-py-1.onrender.com/buscar",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-api-key",
              "value": "1234567890-secret-key"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "realEstateTypeList",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', `ejemplo: apartamento, casa, apartaestudio, oficina`, 'string') }}"
            },
            {
              "name": "realEstateBusinessList",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', `ejemplo: venta, arriendo`, 'string') }}"
            },
            {
              "name": "city",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters2_Value', `Ciudades de colombia`, 'string') }}"
            },
            {
              "name": "roomList",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters3_Value', `cantidad de cuartos`, 'string') }}"
            },
            {
              "name": "bathroomList",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters4_Value', `cantidad de ba√±os ejemplo: 2`, 'string') }}"
            },
            {
              "name": "page",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters5_Value', `pagina de datos agrupada por 5 valores ejemplo: 1`, 'string') }}"
            },
            {
              "name": "areaRange",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters6_Value', `area maxima en mts2 ejemplo: 200. `, 'string') }}"
            },
            {
              "name": "areaRangeMin",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters7_Value', `area minima en mts2 ejemplo: 100 `, 'string') }}"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        940,
        380
      ],
      "id": "27b4d770-3085-4c5d-b069-2951166b8585",
      "name": "Data Properties",
      "retryOnFail": true
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "sh868936@gmail.com",
          "mode": "list",
          "cachedResultName": "sh868936@gmail.com"
        },
        "start": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Start', ``, 'string') }}",
        "end": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('End', ``, 'string') }}",
        "additionalFields": {
          "attendees": [
            "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('attendees0_Attendees', `Correo del usuario`, 'string') }}"
          ],
          "location": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Location', `Direccion de la reunion`, 'string') }}",
          "summary": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Summary', ``, 'string') }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        660,
        360
      ],
      "id": "1f124666-86bf-4a1e-9b38-c42424995aef",
      "name": "Create event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "DwGh7TTHEBg4V5Pq",
          "name": "Google Calendar account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "insert lead new": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        []
      ]
    },
    "Postgres": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Event": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Event Availability for Hour:": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Data Properties": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create event": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d849a517-3fef-41da-b072-11a1a8fddfd5",
  "meta": {
    "templateId": "self-building-ai-agent",
    "templateCredsSetupCompleted": true,
    "instanceId": "80d774bd03b104f5bf2c004c37905f8e2c73f0a7b7ed04ce8d3d75ef5351ed53"
  },
  "id": "yPohYUnWYW8tXdHO",
  "tags": []
}